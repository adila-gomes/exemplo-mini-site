/* Regras CSS para o site inteiro */

/*Regra para TUDO: √© usado o "*" 
    Alterando o comportamento do Box Model visando evitar o problema de tamanho/espa√ßamento PARA TODOS OS ELEMENTOS da p√°gina (por isso, usamos o *)*/
*{ box-sizing: border-box;} 

body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #FF3CAC;
    background-color: #747ea9;
    background-color: #5e656c;
    background-image: linear-gradient(43deg, #aabac9 0%, #d0bbe7 46%, #c6d5e4 100%);
    background-attachment: fixed;
}

/* Imagens responsivas */
img { max-width: 100%; }

/* Regra com seletor CLASSE
Ao usar classes, podemos escolher livremente
onde aplic√°-las, ou seja, em quais tags a classe
ser√° aplicada. */
.container {
    background-color: rgba(255, 255, 255, 0.849);

    /* Bloco CENTRALIZADO */
    width: 70%;
    margin: auto;

    padding: 10px;
    border-radius: 20px;
    box-shadow: purple 10px 10px 30px 10px;
}

/* EXERC√çCIOOOOO ü§ò */
.listas {
    background: linear-gradient(darkblue, transparent, lightblue);
    padding: 1%;
    width: 60%;
    margin: auto;
    border-top: solid 4px black;
    border-bottom: solid 4px black;
    box-shadow: rgba(0, 0, 0, 0.471) 0 0 30px;
}


/* Seletor tipo TAG */
p {
    font-size: 18px;
    
    /* Usando valor fixo/absoluto em px */
    line-height: 32px;

    /* Usando valor relativo/proporcional */
    line-height: 1.5; /* sem px/medida */

    /* Obs: ao usar uma propriedade duas
    vezes na mesma regra, sempre ir√°
    prevalecer o valor da √∫ltima (efeito cascata). No entanto, evite esta situa√ß√£o de repetir propriedades na mesma regra. */
}


/* Seletor Classe */
.centralizar { 
    text-align: center; }

.destaque {
    background-color: rgba(105, 55, 105, 0.418);
    padding: 3px;
    border: solid 1px purple;
    border-radius: 4px;
}

figure {
    text-align: center;
    max-width: 419px;
    
    /* Vers√£o abreviada */
    /* margin: 0 auto; */

    /* Vers√£o detalhada */
    margin-top: 0;
    margin-bottom: 0;
    margin-left: auto;
    margin-right: auto;

    /* Tornando o figure a
    refer√™ncia para o posicionamento
    do figcaption. */
    position: relative;
    
    /* scale(valores de zero at√© 1) */
    transform: scale(0.95) rotate(360deg) translateY(4px);
    filter: grayscale();
    transition: 1s;
}

figcaption {
    font-weight: bold; /* para tornar o texto mais espesso e destacado em compara√ß√£o com o texto normal */
    background-color: rgba(0, 0, 0, 0.8);
    color: white;
    
    /* Tornando o elemento absoluto.
    Agora ele est√° "solto", podendo ser
    colocado em qualquer coordenada. */
    position: absolute;

    /* Propriedades de coordenada:
    top, bottom, left e right */
    
    /* Para "for√ßar" o tamanho total */
    
    /* Op√ß√£o 1: use left/right */
    right: 0;
    left: 0;

    /* Op√ß√£o 2: largura de 100% */
    width: 100%;

    bottom: 20px;

    padding-top: 10px;
    padding-bottom: 10px;
}


/* Seletor DESCENDENTE */
figure img { border: solid 1px; }

/* Seletor PSEUDO-CLASSE - come√ßa com :
:hover -> passar o mouse */
figure:hover {
    filter: none;
    transform: scale(1);
}


/* Seletor DESCENDENTE */
ol li {
    font-weight: bold;
    font-size: 18px;
}

ul li { /* item da lista n√£o-ordenada */
    list-style-type: disc;
}

ul li a { /* link da lista n√£o-ordenada */
    color: white;
    text-decoration: none;
    text-shadow: black 1px 1px 4px;
}

/* Pseudo-elemento ::marker
(usado apenas para fins visuais/est√©ticos) */
ul li::marker {
    content: "üëª ";
    font-size: 16px;   
}


/* Pseudo-classe */
ul li:first-child { /* primeiro "filho" */
    background-color: black;
}

ul li:last-child { /* √∫ltimo "filho" */
    background-color: red;
}

ul li:nth-child(4) { /* en√©simo "filho" */
    background-color: orange;
}


details {
    background-color: white;
    padding: 10px;
    border: solid 10px red;
    text-align: center;
}

summary { font-weight: bold; }

summary::marker { 
    content: "ü§î ";
    font-size: 20px;
}

details[open] summary::marker {
    content: "üí°";
}

/* Regras para o menu de links */
nav { 
    text-align: center; 
    text-decoration: none;
    font-weight: bold;
    color: white;

}

nav a {
    text-decoration: none;
    font-weight: bold;
    background-color: rgb(99, 42, 99);
    color: wheat;

    /* Usamos o inline-block
    para permitir defini√ß√£o de tamanho
    e ao mesmo manter os elementos lado a lado. */
    display: inline-block;
    width: 33.33%;
    padding: 10px;
    transition: 0.5s;
    /* Modificando o Box Model */    
    /*box-sizing: border-box; */    
}

/*Grupo de seletores (veja o uso da v√≠rgula)
Uso das pseudo-classes 
focus √© usado para acessibilidade do usu√°rio sem mouse*/
nav a:hover, nav a:focus {
    background-color: black;
    transform: translateY(10px);
}

.flutuar-imagem { 
    float: left;
    margin-right: 12px;
}

h1, h2, h3 {
    text-align: center;
    color: darkslateblue;
}

hr {
        border: 0;
        height: 2px;
        background: black; 
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.795); 
}

.link {
    text-align: center;
    border: solid 1px purple;
    background-color: whitesmoke;
}

/* .clip-path { 
    clip-path: ellipse(85% 75% at 55% 85%);
    clip-path: polygon(30% 0%, 70% 0%, 100% 8%, 100% 70%, 91% 100%, 9% 100%, 0% 70%, 0 10%);
} */



/* Regra de anima√ß√£o*/ 
@keyframes cores {
    /*D√™*/
    from {
        /*color: rgb(11, 150, 103);*/
        transform: translateY(-100px);
        opacity: 0;
    } 
    
    /*Para*/
    to{
        text-shadow: rgb(226, 98, 119) 0 0 10px;
        /*color: purple;
        transform: scale(1.2);*/
        /*transform: rotate(360deg);*/
    } 
}

/*Classe para aplicar anima√ß√£o*/
.animacao-cores{
    animation-name: cores; /* Nome da anima√ß√£o (obrigat√≥rio) */
    animation-duration: 1s; /* Dura√ß√£o da anima√ß√£o - segundos ou milissegundos - (obrigat√≥rio)*/
    animation-iteration-count: infinite; /* Quantidade de repeti√ß√µes */
    animation-direction: alternate; /* definir a dire√ß√£o em que uma anima√ß√£o √© reproduzida */
    will-change: transform; /*Sinaliza ao navegador o que precisa ser priorizado*/
    animation-timing-function: cubic-bezier(1, 0, 0, 1); /* Fun√ß√£o de acelera√ß√£o/desacelera√ß√£o */
    animation-delay: 5s; /* Atraso (espera para come√ßae a anima√ß√£o) */

    /* Forma abreviada
    -animation: cores 1s cubic-bezier(1, 0, 0, 1) 5s infinite alternate fill-mode; */  
}

@keyframes animaSubtitulos {
    0% { color: rgb(197, 102, 235);}

    50% { color: rgb(87, 155, 245); 
          transform: translateY(250px);
          opacity: 0.5;}

    75% { transform: translateX(10px) scale(2);}

    100% { transform: scale(1); /* altera o tamanho de um elemento em rela√ß√£o ao seu tamanho original, sem alterar o layout do documento */
           color: rgb(226, 98, 119);
        text-shadow: black 0 0 10px;
    }
}

.subtitulo-animado {
    animation-name: animaSubtitulos;
    animation-duration: 5s;
    animation-iteration-count: infinite;
}

.bloco  {
    text-align: center;
    background-color: white;
    border: solid 2px;
    margin: auto; /* Se voc√™ define margin: auto; para um elemento com uma largura fixa, o navegador distribui automaticamente o espa√ßo restante igualmente √† esquerda e √† direita do elemento, resultando em centraliza√ß√£o horizontal */
    width: 70%;
    position: relative;
    overflow: hidden; /* controla o que acontece com o conte√∫do que excede o cont√™iner do elemento, qualquer conte√∫do que ultrapasse as bordas do elemento √© ocultado, n√£o exibindo barras de rolagem nem mostrando o conte√∫do que est√° fora do cont√™iner */
}

.bloco p {
    animation-name: animaTexto;
    animation-duration: 2s;
    animation-iteration-count: infinite;
    animation-direction: alternate;

    font-weight: bold;
    background-color: rgba(202, 166, 231, 0.8);
    color: rgb(226, 219, 219);
    top: 50%;
    bottom: 1px;
    width: 100%; /* define a largura de um elemento. Pode ser especificada em unidades absolutas (como pixels) ou relativas (como porcentagens) */
    z-index: 1000; /* define a ordem de empilhamento dos elementos posicionados. Um valor maior faz com que o elemento fique na frente dos elementos com valores menores. */
    position: absolute;
    will-change: transform; /* √© uma propriedade que indica ao navegador quais propriedades de um elemento v√£o mudar, permitindo que ele otimize o desempenho dessas mudan√ßas */
}

.bloco img {
    animation-name: animaImagem; /* nome da anima√ß√£o */
    animation-duration: 2s; /* dura√ß√£o da anima√ß√£o */
    animation-iteration-count: infinite; /* a anima√ß√£o continuar√° a se executar em loop sem parar */
    animation-direction: alternate; /* cria um efeito de "vai e volta" cont√≠nuo */
    animation-timing-function: linear; /* a anima√ß√£o n√£o acelera nem desacelera, mantendo uma taxa de movimento uniforme do in√≠cio ao fim. */
  
}

@keyframes animaImagem {
    from {
        transform: translateX(-400px) rotate(0deg);
    }

    to {
        transform: translateX(800px) rotate(360deg);
    }
}

@keyframes animaTexto {
    from {
        transform: scale(1);
        background-color: rgba(0, 0, 0, 0.226);
    }

    to {
        transform: scale(1.2);
        background-color: #b888ec;
    }
}